package main

import (
	"reflect"
	"testing"
)

func TestFindTextInFrame(t *testing.T) {
	frame := ""

	expect := []string{string("95 GX-93")}

	resp := findTextInFrame(frame)
	if !reflect.DeepEqual(resp, expect) {
		t.Errorf("Expected %+v, got %+v", expect, resp)
	}
}
